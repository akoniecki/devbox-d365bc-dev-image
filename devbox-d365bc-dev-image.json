{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "8989317985978008362"
    }
  },
  "parameters": {
    "azureImageBuilderName": {
      "type": "string",
      "defaultValue": "devbox-d365bc-imagebuilder",
      "metadata": {
        "description": "Name of the Azure Image Builder resource"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Azure location for the resources (e.g., westeurope, eastus)."
      }
    },
    "galleryName": {
      "type": "string",
      "defaultValue": "devbox-d365bc-gallery",
      "metadata": {
        "description": "Name of the Azure Compute Gallery."
      }
    },
    "imageDefName": {
      "type": "string",
      "defaultValue": "devbox-d365bc-dev-image",
      "metadata": {
        "description": "Name of the image definition in the Azure Compute Gallery."
      }
    },
    "stagingResourceGroupName": {
      "type": "string",
      "defaultValue": "imagebuilder-staging",
      "metadata": {
        "description": "Name of the resource group used for staging resources during image building."
      }
    },
    "initialSetupScript": {
      "type": "string",
      "defaultValue": "choco install -y docker-engine;\nStart-Service docker;\nInstall-Module BcContainerHelper -force;\nGet-BcContainers;\n$hostHelperFolder = 'C:\\\\ProgramData\\\\BcContainerHelper';\nif (-not (Test-Path $hostHelperFolder)) { New-Item -Path $hostHelperFolder -ItemType Directory };\n$acl = Get-Acl -Path $hostHelperFolder;\n$rule = New-Object System.Security.AccessControl.FileSystemAccessRule($env:USERNAME, 'FullControl', 'ContainerInherit, ObjectInherit', 'InheritOnly', 'Allow');\n$acl.AddAccessRule($rule);\n$hostsFile = \"$env:SystemRoot\\System32\\drivers\\etc\\hosts\";\nSet-Acl -Path $hostHelperFolder -AclObject $acl;\n$acl = Get-Acl -Path $hostsFile;\n$rule = New-Object System.Security.AccessControl.FileSystemAccessRule($env:USERNAME, 'Modify', 'Allow');\n$acl.AddAccessRule($rule);\nSet-Acl -Path $hostsFile -AclObject $acl;\n$npipe = '//./pipe/docker_engine';\n$dInfo = New-Object \"System.IO.DirectoryInfo\" -ArgumentList $npipe;\n$dSec = $dInfo.GetAccessControl();\n$fullControl = [System.Security.AccessControl.FileSystemRights]::FullControl;\n$allow = [System.Security.AccessControl.AccessControlType]::Allow;\n$rule = New-Object \"System.Security.AccessControl.FileSystemAccessRule\" -ArgumentList $env:USERNAME, $fullControl, $allow;\n$dSec.AddAccessRule($rule);\n$dInfo.SetAccessControl($dSec);\n$extensions = \"ms-dynamics-smb.al\",\"github.vscode-pull-request-github\",\"github.vscode-github-actions\",\"ms-azuretools.vscode-docker\",\"ms-vscode.powershell\"\nforeach ($ext in $extensions) { code --install-extension $ext }\n",
      "metadata": {
        "description": "PowerShell script content for initial setup after Dev Box first startup."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-07-31-preview",
      "name": "imagebuilder-identity",
      "location": "[parameters('location')]",
      "tags": {}
    },
    {
      "type": "Microsoft.VirtualMachineImages/imageTemplates",
      "apiVersion": "2022-02-14",
      "name": "[parameters('azureImageBuilderName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'imagebuilder-identity'))]": {}
        }
      },
      "properties": {
        "customize": [
          {
            "type": "PowerShell",
            "name": "Development Environment Setup - AL Language",
            "inline": [
              "Set-ExecutionPolicy Bypass -Scope Process -Force",
              "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072",
              "iex ((New-Object System.Net.WebClient).DownloadString(\"https://community.chocolatey.org/install.ps1\"))",
              "choco install Containers Microsoft-Hyper-V --source windowsfeatures",
              "choco install -y git.install",
              "choco install -y vscode",
              "choco install -y gh",
              "refreshenv",
              "$installerPath = \"$env:TEMP\\GitHubDesktopSetup-x64.msi\"",
              "(new-object net.webclient).DownloadFile(\"https://central.github.com/deployments/desktop/desktop/latest/win32?format=msi\", $installerPath)",
              "Start-Process msiexec.exe -ArgumentList \"/i\", $installerPath, \"/qn\" -NoNewWindow -Wait"
            ]
          },
          {
            "type": "PowerShell",
            "name": "Save Initial Setup Script",
            "inline": [
              "          New-Item -ItemType Directory -Force -Path C:\\scripts\n          Set-Content -Path \"C:\\scripts\\initialSetup.ps1\" -Value @\"\n          ${initialSetupScript}\n          \"@ -Force\n          "
            ]
          },
          {
            "type": "WindowsUpdate",
            "searchCriteria": "IsInstalled=0",
            "filters": [
              "exclude:$_.Title -like \"*Preview*\"",
              "include:$true"
            ],
            "updateLimit": 20
          },
          {
            "type": "WindowsRestart",
            "restartCommand": "shutdown /r /f /t 0",
            "restartTimeout": "5m"
          },
          {
            "type": "PowerShell",
            "name": "Final Setup Execution",
            "inline": [
              "Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\" -Name \"initialSetup\" -Value \"powershell.exe -File C:\\scripts\\initialSetup.ps1\""
            ]
          }
        ],
        "distribute": [
          {
            "type": "SharedImage",
            "galleryImageId": "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('imageDefName'))]",
            "runOutputName": "devbox-d365bc-imagebuilder-output",
            "replicationRegions": [
              "[parameters('location')]"
            ]
          }
        ],
        "source": {
          "type": "PlatformImage",
          "publisher": "MicrosoftVisualStudio",
          "offer": "windowsplustools",
          "sku": "base-win11-gen2",
          "version": "latest"
        },
        "vmProfile": {
          "vmSize": "Standard_D16s_v5"
        },
        "stagingResourceGroup": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('stagingResourceGroupName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'imagebuilder-identity')]"
      ]
    }
  ]
}